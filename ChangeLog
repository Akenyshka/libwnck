2001-11-27  Alexander Larsson  <alla@lysator.liu.se>

	* libwnck/pager.c:
	Removed action menu.
	Only return TRUE from button_press if we handled the button.
	Handle set_usized widget correctly in size_request.

2001-11-27  Havoc Pennington  <hp@pobox.com>

	* libwnck/pager.c (wnck_pager_motion): return a value

	* libwnck/window.c (wnck_window_is_on_workspace):
	(wnck_window_is_visible_on_workspace): new functions to see if a
	window is on a workspace, and on a workspace plus in normal state

	* libwnck/pager.c (get_windows_for_workspace_in_bottom_to_top):
	use wnck_window_is_visible_on_workspace() so we don't include
	windows that are minimized, shaded, etc. Also, check 
	that windows are not SKIP_PAGER

2001-11-27  Alexander Larsson  <alla@lysator.liu.se>

	* libwnck/pager.[ch] (get_workspace_rect):
	Fix to work with n_rows != 0
	(get_workspace_rect, wnck_pager_size_request):
	Correct calculation of spaces_per_row if n_spaces not
	a multiple of n_rows.
	(wnck_pager_set_n_rows): Allow setting of n_rows.

2001-11-26  Abel Cheung  <maddog@linux.org.hk>

	* configure.in: Add po/Makefile.in to AC_OUTPUT for translator's
	  fun, if anybody manage to discover this CVS module :)

2001-10-25  Havoc Pennington  <hp@redhat.com>

	* libwnck/pager.c: fixups, window dragging, etc.

	* libwnck/xutils.c (filter_func): use proper window from configure
	event

2001-10-25  Havoc Pennington  <hp@pobox.com>

	* libwnck/pager.c (wnck_pager_expose_event): tinker with
	appearance more

2001-10-25  Havoc Pennington  <hp@pobox.com>

	* libwnck/pager.c (wnck_pager_expose_event): only draw active
	window as selected, not whole workspace

2001-10-25  Havoc Pennington  <hp@pobox.com>

	* libwnck/pager.c: right-click menu

	* libwnck/window-menu.c: fix weak ref stuff

	* libwnck/window-action-menu.c (wnck_create_window_action_menu):
	fix a weak ref

	* libwnck/window.c (_wnck_window_create): initially update actions

2001-10-24  Havoc Pennington  <hp@pobox.com>

	* libwnck/pager.c: make it all bloated

2001-10-24  Havoc Pennington  <hp@pobox.com>

	* libwnck/pager.c: hacking

2001-10-24  Havoc Pennington  <hp@redhat.com>

	* configure.in: hack to work with slightly older GTK as well as
	HEAD
	
	* libwnck/screen.c (wnck_screen_force_update): add function to
	force immediate reading of screen state, instead of queueing it

	* libwnck/window.c: add geometry reporting

	* libwnck/pager.c: pager widget skeleton

2001-10-18  Havoc Pennington  <hp@redhat.com>

	* libwnck/tasklist.c: skeleton of widget for tasklist-like
	displays, mostly not implemented	

2001-10-18  Havoc Pennington  <hp@redhat.com>

	* libwnck/window-action-menu.c: menu for window operations
	(close, maximize, etc.)

	* libwnck/window.h: add #error unless you define a magic symbol

	* libwnck/window-menu.h: add window menu feature (list of windows
	to choose)

2001-10-09  Havoc Pennington  <hp@pobox.com>

	* libwnck/test-wnck.c (maximized_toggled_callback): maximize don't
	minimize to toggle maximization
	(window_stacking_changed_callback): don't refill model on stacking
	changed

2001-10-09  Havoc Pennington  <hp@pobox.com>

	* libwnck/window.c, libwnck/xutils.c: support window icons
	(wnck_window_get_session_id_utf8): fix

2001-10-08  Havoc Pennington  <hp@pobox.com>

	* libwnck/screen.c: support _NET_CLIENT_LIST, now I understand the 
	point of both that and the stacking order one

	* libwnck/window.c (_wnck_window_create): don't break GDK's event
	mask, fixes resize issues with test-wnck

2001-10-07  Havoc Pennington  <hp@pobox.com>

	* libwnck/test-wnck.c: fixes (requires CVS HEAD GTK)

2001-10-07  Havoc Pennington  <hp@pobox.com>

	* libwnck/window.c (_wnck_window_process_property_notify): fix 
	to handle WM_STATE changes
	
	* libwnck/test-wnck.c: add GUI to test program. exposes various
	GTK bugs...

2001-10-07  Havoc Pennington  <hp@pobox.com>

        * libwnck/window.c: add more info to state_changed signal, 
	set up generated enum/marshaller files to support it.
	
	* libwnck/window.c: add support for getting session ID, pid

	* libwnck/application.c: implement creation/destruction of the
	application object, and its association with a window

	* libwnck/window.c: add code to monitor a window's current
	workspace

2001-10-07  Havoc Pennington  <hp@pobox.com>

	* libwnck/window.c: add a bunch of state query/modify functions

2001-10-07  Havoc Pennington  <hp@pobox.com>

	* libwnck/*: Initial semi-functionality

